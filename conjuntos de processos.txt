its work with thresholds:


  insert(p, 5, 20, 40, 3, 3); // Só não quando há sincronização
  insert(p, 4, 14, 16, 2, 2);
  insert(p, 2, 16, 20, 1, 2);


  insert(p, 3, 9, 10, 5, 5);
  insert(p, 2, 12, 13, 4, 4);
  insert(p, 5, 22, 25, 3, 3);
  insert(p, 4, 22, 26, 2, 3);
  insert(p, 1, 25, 30, 1, 3);


  insert(p, 3, 5, 12, 5, 5);
  insert(p, 2, 4, 15, 4, 4);
  insert(p, 5, 12, 25, 3, 3);
  insert(p, 4, 7, 27, 2, 3);
  insert(p, 1, 12, 30, 1, 3);

  insert(p, 2, 5, 5, 3, 3); //Super escalonável
  insert(p, 1, 7, 7, 2, 3);
  insert(p, 3, 20, 20, 1, 3);

============// ===========

/*  5
  insert(p, 3, 14, 10);
  insert(p, 2, 16, 13);
  insert(p, 5, 40, 25);
  insert(p, 4, 37, 18);
  insert(p, 1, 29, 10);
*/

/*  7
  insert(p, 4, 14, 14);
  insert(p, 4, 16, 16);
  insert(p, 7, 25, 40);
  insert(p, 1, 12, 30);
  insert(p, 5, 23, 60);
  insert(p, 3, 15, 40);
  insert(p, 2, 13, 21);
*/

/*  10
  insert(p, 3, 11, 16);
  insert(p, 5, 16, 41);
  insert(p, 2, 14, 19);
  insert(p, 3, 10, 20);
  insert(p, 1, 8, 21);
  insert(p, 4, 13, 32);
  insert(p, 2, 16, 31);
  insert(p, 3, 14, 40);
  insert(p, 5, 15, 60);
  insert(p, 1, 7, 30);
*/

/*  13
  insert(p, 2, 5, 31);
  insert(p, 3, 7, 40);
  insert(p, 5, 11, 60);
  insert(p, 1, 4, 30);
  insert(p, 3, 7, 38);
  insert(p, 4, 8, 53);
  insert(p, 1, 5, 21);
  insert(p, 2, 7, 40);
  insert(p, 4, 9, 60);
  insert(p, 3, 8, 55);
  insert(p, 5, 15, 60);
  insert(p, 2, 6, 39);
  insert(p, 1, 5, 30);
*/

/*  15
  insert(p, 2, 5, 31);
  insert(p, 3, 8, 40);
  insert(p, 5, 15, 60);
  insert(p, 1, 3, 30);
  insert(p, 3, 9, 38);
  insert(p, 4, 11, 53);
  insert(p, 1, 2, 21);
  insert(p, 2, 7, 40);
  insert(p, 4, 10, 60);
  insert(p, 3, 8, 55);
  insert(p, 5, 12, 70);
  insert(p, 2, 4, 39);
  insert(p, 1, 3, 50);
  insert(p, 2, 5, 30);
  insert(p, 4, 7, 31);
*/

 /*
  insert(p, 6, 30, 41);
  insert(p, 3, 27, 34);
  insert(p, 2, 23, 41);
  insert(p, 4, 42, 48);
  insert(p, 2, 31, 35);
  insert(p, 1, 23, 30);
  insert(p, 3, 48, 50);
  insert(p, 5, 36, 47);
  insert(p, 2, 45, 84);
  insert(p, 6, 50, 79);
  insert(p, 4, 45, 68);
  insert(p, 6, 61, 80);
  insert(p, 3, 56, 65);
  insert(p, 4, 70, 98);
  insert(p, 5, 77, 89);
*/

 /* struct procs p[15];
//int pid, c,  d,  t, p, o;
  insert(p, 6, 30, 41, 15, 15);
  insert(p, 3, 27, 34, 14, 14);
  insert(p, 2, 23, 41, 13, 13);
  insert(p, 4, 42, 48, 12, 13);
  insert(p, 2, 31, 35, 11, 11);

  insert(p, 1, 23, 30, 10, 10);
  insert(p, 3, 48, 50, 9, 10);
  insert(p, 5, 36, 47, 8, 8);
  insert(p, 2, 45, 84, 7, 7);
  insert(p, 6, 50, 79, 6, 6);
  insert(p, 4, 45, 68, 5, 6);
  insert(p, 6, 61, 80, 4, 4);
  insert(p, 3, 56, 65, 3, 3);
  insert(p, 4, 70, 98, 2, 3);
  insert(p, 5, 77, 89, 1, 2);*/
  struct procs p[3];
  insert(p, 4, 7, 14, 1, 1);
  insert(p, 4, 7, 16, 2, 2);
  insert(p, 7, 10, 40, 3, 3);


/*   
  struct procs p[3];
  insert(p, 4, 14, 10, 3, 3);
  insert(p, 4, 16, 16, 2, 3);
  insert(p, 7, 40, 20, 1, 2);
*/


 // Teste de tempo

/*long long a, b;
  int i;
  for (i = 0; i < 100; i++){
    a = T();
    sleep(1000);
    b = T();
    printf(1, "%d\n", b - a);
  }
*/


/* long long a, b;
  int i, j;
  for(j = 0; j < 50; j++){
    a = T();
    for(i = 0; i < 100000; i++);
    b = T();
    printf(1, "%d\n", b - a);
  }
*/